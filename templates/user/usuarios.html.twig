{% extends 'base.html.twig' %}

{% block title %}Admin{% endblock %}

{% block body %}
    <div class="container-fluid my-4">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h4 class="mb-0 fw-semibold text-dark">Usuarios</h4>
            <button  onclick="abrirModalRegistro()" class="btn btn-success d-flex align-items-center">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor"
                     class="bi bi-plus-circle me-2" viewBox="0 0 16 16">
                    <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
                    <path d="M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0-1A6 6 0 1 1 8 2a6 6 0 0 1 0 12z"/>
                </svg>
                Crear usuario
            </button>
        </div>
    </div>
    <table class="table table-bordered table-hover align-middle text-center">
        <thead>
        <tr>
            <th>ID</th>
            <th>NOMBRE</th>
            <th>APELLIDO</th>
            <th>EMAIL</th>
            <th>Rol</th>
            <th>Opciones</th>
            <th>Eliminar</th>
        </tr>
        </thead>
        <tbody>
        {% for usuario in users %}
            <tr>
                <td>{{ usuario.id }}</td>
                <td>{{ usuario.nombre }}</td>
                <td>{{ usuario.apellidos }}</td>
                <td>{{ usuario.email }}</td>
                <td>
                    {% if 'ROLE_ADMIN' in usuario.roles %}
                        admin
                    {% elseif 'ROLE_ALUMNO' in usuario.roles %}
                        alumno
                    {% else %}
                        sin rol asignado
                    {% endif %}
                </td>
                <td>
                    <div class="d-flex justify-content-center">
                        <div class="dropdown">
                            <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Opciones
                            </button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" onclick="abrirModalMatriculas({{ usuario.id }})">Ver matícula</a></li>
                                <li><a class="dropdown-item" onclick="abrirModal({{ usuario.id }})">Editar</a></li>
                            </ul>
                        </div>
                    </div>
                </td>
                <td>
                    <div class="d-flex justify-content-center">
                        <button type="button" class="btn btn-danger btn-sm" onclick="Eliminar({{ usuario.id }})">
                            <svg xmlns="http://www.w3.org/2000/svg" width="26" height="16" fill="currentColor"
                                 class="bi bi-file-earmark-x" viewBox="0 0 16 16">
                                <path d="M6.854 7.146a.5.5 0 1 0-.708.708L7.293 9l-1.147 1.146a.5.5 0 0 0 .708.708L8 9.707l1.146 1.147a.5.5 0 0 0 .708-.708L8.707 9l1.147-1.146a.5.5 0 0 0-.708-.708L8 8.293z"/>
                                <path d="M14 14V4.5L9.5 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2M9.5 3A1.5 1.5 0 0 0 11 4.5h2V14a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h5.5z"/>
                            </svg>
                        </button>
                    </div>
                </td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
    <div class="modal fade" id="modalRegistro" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="registroModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content" id="contenido-modal-registro">
            </div>
        </div>
    </div>
    <div class="modal fade" id="miModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content" id="contenido-modal">
            </div>
        </div>
    </div>
    <div class="modal fade" id="modalMatriculas" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="modalMatriculasLabel" aria-hidden="true">
        <div class="modal-dialog modal-fullscreen">
            <div class="modal-content" id="contenido-modal-matriculas">

            </div>
        </div>
    </div>

{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script>
        function abrirModalRegistro() {
            fetch('/admin/abrirModalRegistro', {
                method: 'GET',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
                .then(res => res.text())
                .then(html => {
                    document.getElementById('contenido-modal-registro').innerHTML = html;
                    const modal = new bootstrap.Modal(document.getElementById('modalRegistro'));
                    modal.show();
                })

        }

        function registrarUsuario() {
            const datos = {
                nombre: document.getElementById('nombre').value,
                apellidos: document.getElementById('apellidos').value,
                email: document.getElementById('email').value,
                password: document.getElementById('password').value
            };

            fetch('/admin/añadirUser', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify(datos)
            })
                .then(res => res.json())
                .then(data => {
                    if (data.existe) {
                        document.getElementById('alerta-error').classList.remove('d-none');
                    } else if (data.redirect) {
                        window.location.href = data.redirect;
                    }
                })

        }

        function AsignarMatricula(id){
            const selectCentro = document.getElementById('centroSelect');
            const selectTitulacion = document.getElementById('titulacionSelect');

            const datos = {
                id_user: id,
                centro: selectCentro.options[ selectCentro.selectedIndex ].value,
                titulacion: selectTitulacion.options[ selectTitulacion.selectedIndex ].value,
                fecha_fin: document.getElementById('fecha_fin').value,
                fecha_inicio: document.getElementById('fecha_inicio').value,
            };


            fetch('/admin/AsignarMatricula', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify(datos)
            })
                .then(res => res.json())
                .then(data => {
                    const modal = bootstrap.Modal.getInstance(document.getElementById('modalAsignarMatricula'));
                    modal.hide();

                    abrirModalMatriculas(id);
                })
                .catch(err => {
                    console.error('Error en la petición:', err);
                });
        }

        function cargarTitulaciones(centroId) {
            fetch('/admin/titulaciones_por_centro?id=' + centroId)
                .then(response => response.json())
                .then(data => {
                    const select = document.getElementById('titulacionSelect');
                    select.innerHTML = '<option value="">Selecciona una titulación</option>';

                    data.forEach(titulacion => {
                        select.options.add(new Option(titulacion.nombre, titulacion.id));
                    });
                })
                .catch(error => {
                    console.error('Error al cargar titulaciones:', error);
                });
        }

        function abrirModalAsignarMatricula(id) {
            fetch('/admin/abrirModalAsignarMatricula?id=' + id, {
                method: 'GET',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
                .then(response => response.text())
                .then(html => {
                    document.getElementById('contenidoModalAsignar').innerHTML = html;
                    const modal = new bootstrap.Modal(document.getElementById('modalAsignarMatricula'));
                    modal.show();
                })
                .catch(error => {
                    console.error('Error al abrir la modal de asignar matrícula:', error);
                });
        }

        function abrirModalMatriculas(id){
            fetch('/admin/MostrarMatriculas?id=' + id, {
                method: 'GET',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
                .then(response => response.text())
                .then(html => {
                    document.getElementById('contenido-modal-matriculas').innerHTML = html;
                    const modal = new bootstrap.Modal(document.getElementById('modalMatriculas'));
                    modal.show();
                });
        }

        function cargarDetalleMatricula(id) {
            fetch('/admin/Detalle-matricula/?id='+ id)
                .then(res => res.text())
                .then(html => {
                    document.getElementById('contenedor-detalle-matricula').innerHTML = html;
                });
        }

        function abrirModal(id){
            fetch('/admin/abrirModal?id=' + id, {
                method: 'GET',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
                .then(response => response.text())
                .then(html => {
                    document.getElementById('contenido-modal').innerHTML = html;
                    const modal = new bootstrap.Modal(document.getElementById('miModal'));
                    modal.show();
                });
        }

        function GuardarUser(){
            const datos = {
                id: document.getElementById('user-id').value,
                nombre: document.getElementById('nombre').value,
                apellidos: document.getElementById('apellidos').value,
                email: document.getElementById('email').value,
                roles: [document.getElementById('roles').value],
                activo: document.getElementById('activo').value === "1"
            };

            fetch('/admin/updateUsuario', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify(datos)
            })
                .then(res => res.json())
                .then(data => {
                    const modal = bootstrap.Modal.getInstance(document.getElementById('miModal'));
                    modal.hide();

                    if (data.redirect) {
                        window.location.href = data.redirect;
                    }
                })
                .catch(err => {
                    console.error('Error en la petición:', err);
                });
        }
        function Eliminar(id){
            const datos = {
                id: id
            };

            fetch('/admin/deleteUser', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify(datos)
            })
                .then(res => res.json())
                .then(data => {
                    window.location.href = data.redirect;
                })
                .catch(err => {
                    console.error('Error en la petición:', err);
                });
        }
    </script>
{% endblock %}